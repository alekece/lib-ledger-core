# $1 platform <linux|macos|windows>
# $2 mode <release|debug>
# $3 target
# $4 target parameters

function setup_Linux {
    sudo apt-get update
    sudo apt-get install -y libx11-xcb-dev
    sudo apt-get install -y sqlite3 sqlite libsqlite3-dev
    sudo apt-get install -y postgresql libpq-dev postgresql-server-dev-all

    if [ "$3" == "android" ]; then
        # This is useful for SQLCipher/config.guess
        export LIBC=gnu

        # Set Android NDK variable
        export ANDROID_NDK_r18b=/home/circleci/android-ndk-r18b
        export JAVA_HOME="$(/usr/libexec/java_home -v 1.8)" || export JAVA_HOME="/usr/lib/jvm/java-11-openjdk-amd64/"
        export POLLY_ROOT=toolchains/polly

        if [ "$4" == "armeabi-v7a" ]; then
            export TOOLCHAIN_NAME="android-ndk-r18b-api-21-armeabi-v7a-clang-libcxx"
        elif [ "$4" == "arm64-v8a" ]; then
            export TOOLCHAIN_NAME="android-ndk-r18b-api-21-arm64-v8a-clang-libcxx"
        elif [ "$4" == "x86_64" ]; then
            export TOOLCHAIN_NAME="android-ndk-r18b-api-21-x86-64-clang-libcxx"
        else
            export TOOLCHAIN_NAME="android-ndk-r18b-api-21-x86-clang-libcxx"
        fi
    fi
}

function setup_macos {
    brew install postgresql
    brew install sqlite
    brew install sbt

    if [ "$2" == "debug" ]; then
        brew install qt5

        # Get accurate qt5 version
        export PATH="/usr/local/Cellar/qt/$(ls /usr/local/Cellar/qt | grep 5.)/bin:$PATH"
    fi

    if [ "$3" == "ios" ]; then
        export POLLY_IOS_BUNDLE_IDENTIFIER='com.ledger.core'
        # Needed for nocodesign toolchains
        export XCODE_XCCONFIG_FILE=$POLLY_ROOT/scripts/NoCodeSign.xcconfig

        if [ "$4" == "armv7" ]; then
            export TOOLCHAIN_NAME='ios-nocodesign-11-2-dep-9-3-armv7'
            export OSX_SYSROOT=iphoneos
        elif [ "$4" == "arm64" ]; then
            export TOOLCHAIN_NAME='ios-nocodesign-11-2-dep-9-3-arm64'
            export OSX_SYSROOT=iphoneos
        else
            export TOOLCHAIN_NAME='ios-nocodesign-11-2-dep-9-3'
            export OSX_SYSROOT=iphonesimulator
            export ARCH=x86_64
            # Copy iphone.cmake which is not forcing CMAKE_OSX_SYSROOT to iphoneos in cache
            cp tools/build_ios/iphone.cmake lib-ledger-core/toolchains/polly/os/
        fi

        cp tools/build_ios/framework.plist.in `pwd`
        cp tools/build_ios/install_name.sh `pwd`

        # Fixing NoCodeSign (see https://github.com/ruslo/polly/issues/302 for further details)
        sed -i '' '/CODE_SIGN_ENTITLEMENTS/d' toolchains/polly/scripts/NoCodeSign.xcconfig
    fi
}

function setup_windows {

}

setup_$1 $@



